/*
COLORS:
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /*set the box model so the border and padding are no longer added to the total of the box model */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.7;
  color: #777;
  padding: 30px;
  /* this padding doesn't get inherited throughout */
}

header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(125, 213, 111, 0.5), rgba(40, 180, 131, 0.7)), url("../img/hero1.jpeg");
  background-size: cover;
  background-position: bottom;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  position: relative;
  /*this set to relative because this is the parent element of logo-box*/
}

/*set position based on the parent element*/
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.heading_text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -60%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 60px;
  backface-visibility: hidden;
  /*fixed for animation jerkiness - results to smooth animation*/
}

/*since span element is inline by nature*/
/*we would make these classes block element so */
/*we can style and position these elements to where we need them to be*/
.heading-primary-main {
  display: block;
  font-size: 3.75rem;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 1.25rem;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation-name: moveInRight;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  /*this way the box model will work for this element - so padding and height would work*/
  border-radius: 100px;
  transition: all 0.3s;
  position: relative;
}
.btn:after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s ease-out;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
}
.btn:hover:after {
  transform: scaleX(1.25) scaleY(1.5);
  opacity: 0;
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
}

.btn-white {
  background-color: #fff;
  color: #777;
}
.btn-white:after {
  background-color: #fff;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/*# sourceMappingURL=style.css.map */
